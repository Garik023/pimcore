imports:
    - { resource: 'local/' }


pimcore:

# IMPORTANT Notice!
# Following there are only some examples listed, for a full list of possible options, please run the following command:
# ./bin/console debug:config pimcore
# you can also filter them by path, eg.
# ./bin/console debug:config pimcore assets
# or even more specific:
# ./bin/console debug:config pimcore assets.image


#### TRANSLATIONS
#    translations:
#        case_insensitive: true

#### FEATURE FLAGS
#    flags:
#        zend_date: true

#### CLASS OVERRIDES EXAMPLES
#    models:
#        class_overrides:
#            'Pimcore\Model\DataObject\News': 'App\Model\DataObject\News'
#            'Pimcore\Model\DataObject\News\Listing': 'App\Model\DataObject\News\Listing'
#            'Pimcore\Model\DataObject\Folder': 'App\Model\DataObject\Folder'
#            'Pimcore\Model\Asset\Folder': 'App\Model\Asset\Folder'
#            'Pimcore\Model\Asset\Image': 'App\Model\Asset\Image'
#            'Pimcore\Model\Document\Page': 'App\Model\Document\Page'
#            'Pimcore\Model\Document\Link': 'App\Model\Document\Link'
#            'Pimcore\Model\Document\Listing': 'App\Model\Document\Listing'


#### CUSTOM DOCUMENT EDITABLES
#    documents:
#        allow_trailing_slash: 'yes'
#        generate_preview: false
#        tags:
#            map:
#                markdown: \App\Model\Document\Tag\Markdown


#### CUSTOM OBJECT DATA TYPES
#    objects:
#        class_definitions:
#            data:
#                map:
#                  myDataType: \App\Model\DataObject\Data\MyDataType


#### ASSET CUSTOM SETTINGS
#    assets:
#        icc_rgb_profile: ''
#        icc_cmyk_profile: ''
#        versions:
#            use_hardlinks: false
#        image:
#            low_quality_image_preview:
#                enabled: false
#                generator: imagick
#            thumbnails:
#                webp_auto_support: false


#### SYSTEM SETTINGS

#    general:
#        timezone: Europe/Berlin
#        path_variable: ''
#        instance_identifier: ''
#    services:
#        google:
#            client_id: 73893596983.apps.googleusercontent.com
#            email: 73893596983@developer.gserviceaccount.com
#            simple_api_key: AIzaSyCo9Wj49hYJWW2WgOju4iMYNTvdcBxmyQ8
#            browser_api_key: AIzaSyBJX16kWAmUVEz1c1amzp2iKqAfumbcoQQ
#    full_page_cache:
#        enabled: false
#        lifetime: null
#        exclude_cookie: ''
#        exclude_patterns: ''
#    httpclient:
#        adapter: Socket # use 'Proxy' for custom proxy configuration
#        proxy_host: ''
#        proxy_port: ''
#        proxy_user: ''
#        proxy_pass: ''
#    email:
#        sender:
#            name: 'Pimcore Demo'
#            email: demo@pimcore.com
#        return:
#            name: ''
#            email: ''
#    newsletter:
#        use_specific: false # set true to use the following options for newsletter delivery
#        sender:
#            name: ''
#            email: ''
#        return:
#            name: ''
#            email: ''

#    applicationlog:
#        mail_notification:
#            send_log_summary: false
#            filter_priority: null
#            mail_receiver: ''
#        archive_treshold: '30'
#        archive_alternative_database: ''

#### SYMFONY OVERRIDES
framework:

#### DEFINE LOCATION OF MANIFEST WHEN WORKING WITH SYMFONY ENCORE
#    assets:
#        json_manifest_path: '%kernel.project_dir%/public/build/manifest.json'

#### USE CUSTOM CACHE POOL
#    cache:
#        pools:
#            pimcore.cache.pool:
#                public: true
#                tags: true
#                default_lifetime: 31536000  # 1 year
#                adapter: pimcore.cache.adapter.redis_tag_aware
#                provider: 'redis://localhost' # Redis DNS, see: https://symfony.com/doc/current/components/cache/adapters/redis_adapter.html#configure-the-connection

#### USE SESSION HANDLER CONFIGURED IN php.ini
#    session:
#        handler_id: null

#### SYMFONY MAILER TRANSPORTS
#    mailer:
#        transports:
#            main: smtp://user:pass@smtp.example.com:port
#            pimcore_newsletter: smtp://user:pass@smtp.example.com:port

pimcore_ecommerce_framework:
    # Default scale used for Decimal objects
    decimal_scale: 4

    # Configuration of Pimcore backend menu entries
    pimcore:
        menu:

            # Enabling/Disabling Pricing Rules menu entry. User specific settings can be done via permissions.
            pricing_rules:
                enabled: true

            # Configuring order list menu - enabling/disabling and defining route of order list to inject custom implementations of order backend.
            order_list:
                enabled: true
                route: pimcore_ecommerce_backend_admin-order_list
                path: null

    # Configuration of e-commerce framework factory
    factory:

        # Service Id of factory implementation
        factory_id: Pimcore\Bundle\EcommerceFrameworkBundle\Factory

        # If true the factory will not fall back to the default tenant if a tenant is passed but not existing
        strict_tenants: false

    # Configuration of environment
    environment:
        environment_id: Pimcore\Bundle\EcommerceFrameworkBundle\SessionEnvironment
        options: [ ]

    # Settings for cart manager
    cart_manager:
        tenants:
            # _defaults will be automatically merged into every tenant and removed afterwards
            # the result will be a default and a noShipping
            _defaults:
                #                cart:
                #                    factory_id: CartFactoryIdservices:
                price_calculator:
                    #                    factory_id: PriceCalculatorFactoryId
                    factory_options:
                        foo: bar

            default:
                price_calculator:
                    factory_options:
                        baz: 1234

            noShipping:
                price_calculator:
                    factory_options:
                        baz: 4321

    index_service:
        # product index defines multiple tenants which can be disabled individually
        # a tenant can define placeholders which will be replaced
        tenants:
            MyEsTenant:
                config_options:
                    client_config:
                        logging: false
                        indexName: 'ecommerce-demo-elasticsearch'

                    es_client_params:
                        hosts:
#                            - 'http://127.0.0.1:9200'
                        timeoutMs: 20000, # 20 seconds
                        timeoutMsBackend: 120000 # 2 minutes

                    index_settings:
                        number_of_shards: 5
                        number_of_replicas: 0
                        max_ngram_diff: 30
                        analysis:
                            analyzer:
                                my_ngram_analyzer:
                                    tokenizer: my_ngram_tokenizer
                                whitelist_analyzer:
                                    tokenizer: standard
                                    filter:
                                        - white_list_filter
                            tokenizer:
                                my_ngram_tokenizer:
                                    type: nGram
                                    min_gram: 2
                                    max_gram: 15
                                    token_chars: [ letter, digit ]
                            filter:
                                white_list_filter:
                                    type: keep
                                    keep_words:
                                        - was
                                        -   WAS                '%%locale%%': nl
            example_tenant:
                attributes:
                    rucksacksLoad:
                        type: 'double'
                        filter_group: double

                        # a getter is a specific service responsible for getting the value from an object
                        # this must be defined as service - as we use the class name as service id you can
                        # just use the fully qualified class name. you can use your own getters if you define
                        # them as service first
                        getter_id: Pimcore\Bundle\EcommerceFrameworkBundle\IndexService\Getter\DefaultBrickGetter

                        # options passed to the getter. available options vary by getter implementation - see
                        # getter for available options
                        getter_options:
                            brickfield: specificAttributes
                            bricktype: rucksackSpecs
                            fieldname: load

                        # an interpreter can further transform the value retrieved by the getter. same logic applies as
                        # for getters - interpreter must be defined as service
                        interpreter_id: Pimcore\Bundle\EcommerceFrameworkBundle\IndexService\Interpreter\Numeric

                        # interpreter can define options which are passed to the interpreter when interpreting the value
                        interpreter_options: { }
    filter_service:
        tenants:
            default:
                # assign backend implementations and views to filter type field collections
                filter_types:

                    # filter type for the FilterNumberRange field collection
                    FilterNumberRange:
                        # service id for filter type implementation
                        filter_type_id: Pimcore\Bundle\EcommerceFrameworkBundle\FilterService\FilterType\NumberRange
                        # default template for filter, can be overwritten in filter definition
                        template: ':Shop/filters:range.html.php'

                    FilterNumberRangeSelection:
                        filter_type_id: Pimcore\Bundle\EcommerceFrameworkBundle\FilterService\FilterType\NumberRangeSelection
                        template: ':Shop/filters:numberrange.html.php'

                    FilterSelect:
                        filter_type_id: Pimcore\Bundle\EcommerceFrameworkBundle\FilterService\FilterType\Select
                        template: ':Shop/filters:select.html.php'

                    FilterSelectFromMultiSelect:
                        filter_type_id: Pimcore\Bundle\EcommerceFrameworkBundle\FilterService\FilterType\SelectFromMultiSelect
                        template: ':Shop/filters:select.html.php'

                    FilterMultiSelect:
                        filter_type_id: Pimcore\Bundle\EcommerceFrameworkBundle\FilterService\FilterType\MultiSelect
                        template: ':Shop/filters:multiselect.html.php'

                    FilterMultiSelectFromMultiSelect:
                        filter_type_id: Pimcore\Bundle\EcommerceFrameworkBundle\FilterService\FilterType\MultiSelectFromMultiSelect
                        template: ':Shop/filters:multiselect.html.php'

                    FilterMultiRelation:
                        filter_type_id: Pimcore\Bundle\EcommerceFrameworkBundle\FilterService\FilterType\MultiSelectRelation
                        template: ':Shop/filters:multiselect-relation.html.php'

                    FilterCategory:
                        filter_type_id: Pimcore\Bundle\EcommerceFrameworkBundle\FilterService\FilterType\SelectCategory
                        template: ':Shop/filters:select_category.html.php'

                    FilterRelation:
                        filter_type_id: Pimcore\Bundle\EcommerceFrameworkBundle\FilterService\FilterType\SelectRelation
                        template: ':Shop/filters:object_relation.html.php'